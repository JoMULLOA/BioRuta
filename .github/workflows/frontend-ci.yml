name: 📱 Frontend Flutter CI/CD Pipeline

# Cuándo se ejecuta
on:
  push:
    branches: [base, test, main]
    paths: ['frontend/**']
  
  pull_request:
    branches: [test, main]
    paths: ['frontend/**']

# Variables globales
env:
  FLUTTER_VERSION: '3.16.x'  # Ajusta según tu versión

jobs:
  # JOB 1: Análisis de Flutter
  flutter-analysis:
    name: 🔍 Análisis Flutter
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Descargar código
        uses: actions/checkout@v4
      
      - name: 🐦 Configurar Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
      
      - name: 📦 Obtener dependencias
        run: |
          cd frontend
          flutter pub get
      
      - name: 🔍 Análisis de código Dart
        run: |
          cd frontend
          flutter analyze
      
      - name: 📐 Verificar formato
        run: |
          cd frontend
          flutter format --set-exit-if-changed --dry-run .

  # JOB 2: Tests Flutter
  flutter-tests:
    name: 🧪 Tests Flutter
    runs-on: ubuntu-latest
    needs: flutter-analysis
    
    steps:
      - name: 📥 Descargar código
        uses: actions/checkout@v4
      
      - name: 🐦 Configurar Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
      
      - name: 📦 Obtener dependencias
        run: |
          cd frontend
          flutter pub get
      
      - name: 🧪 Ejecutar tests
        run: |
          cd frontend
          flutter test
      
      - name: 📊 Generar reporte de tests
        run: |
          echo "📊 Tests completados para Flutter"

  # JOB 3: Build Android (Rama base/test)
  build-android:
    name: 🤖 Build Android
    runs-on: ubuntu-latest
    needs: [flutter-analysis, flutter-tests]
    if: github.ref == 'refs/heads/base' || github.ref == 'refs/heads/test'
    
    steps:
      - name: 📥 Descargar código
        uses: actions/checkout@v4
      
      - name: ☕ Configurar Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'
      
      - name: 🐦 Configurar Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
      
      - name: 📦 Obtener dependencias
        run: |
          cd frontend
          flutter pub get
      
      - name: 🏗️ Build APK Debug
        run: |
          cd frontend
          flutter build apk --debug
      
      - name: 💾 Guardar APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-debug-${{ github.sha }}
          path: frontend/build/app/outputs/flutter-apk/app-debug.apk
          retention-days: 7

  # JOB 4: Build Release (Solo rama main)
  build-release:
    name: 🚀 Build Release
    runs-on: ubuntu-latest
    needs: [flutter-analysis, flutter-tests]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: 📥 Descargar código
        uses: actions/checkout@v4
      
      - name: ☕ Configurar Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'
      
      - name: 🐦 Configurar Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
      
      - name: 📦 Obtener dependencias
        run: |
          cd frontend
          flutter pub get
      
      - name: 🏗️ Build APK Release
        run: |
          cd frontend
          flutter build apk --release
      
      - name: 💾 Guardar APK Release
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-release-${{ github.sha }}
          path: frontend/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30

  # JOB 5: Notificación
  notify-flutter:
    name: 📬 Notificaciones Flutter
    runs-on: ubuntu-latest
    needs: [flutter-analysis, flutter-tests, build-android]
    if: always()
    
    steps:
      - name: 📊 Resumen Flutter Pipeline
        run: |
          echo "📱 Flutter Pipeline completado para BioRuta"
          echo "📂 Rama: ${{ github.ref_name }}"
          echo "🔨 Build Status: ${{ needs.build-android.result }}"
          echo "🧪 Tests Status: ${{ needs.flutter-tests.result }}"
